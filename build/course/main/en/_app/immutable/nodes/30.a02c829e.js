import{s as Up,o as jp}from"../chunks/scheduler.37c15a92.js";import{S as _p,i as Ip,g as p,s as n,r,m as b,H as Lt,A as Ap,h as i,f as e,c as l,j as w,u as o,x as m,n as $,E as Xt,k as wp,y as u,a,v as c,d as h,t as g,w as y}from"../chunks/index.2bf4358c.js";import{T as kp}from"../chunks/Tip.363c041f.js";import{C as f}from"../chunks/CodeBlock.4f5fc1ad.js";import{H as d}from"../chunks/Heading.8ada512a.js";function zp(te){let M;return{c(){M=b("This section dives into the technical and mathematical details of GRPO. It was authored by [Shirin Yamani](https://github.com/shirinyamani).")},l(v){M=$(v,"This section dives into the technical and mathematical details of GRPO. It was authored by [Shirin Yamani](https://github.com/shirinyamani).")},m(v,j){a(v,M,j)},d(v){v&&e(M)}}}function Gp(te){let M,v,j,ee,_,ae,J,ne,I,Fn="Let’s deepen our understanding of GRPO so that we can improve our model’s training process.",le,A,Dn="GRPO directly evaluates the model-generated responses by comparing them within groups of generation to optimize policy model, instead of training a separate value model (Critic). This approach leads to significant reduction in computational cost!",pe,k,Wn="GRPO can be applied to any verifiable task where the correctness of the response can be determined. For instance, in math reasoning, the correctness of the response can be easily verified by comparing it to the ground truth.",ie,z,Yn="Before diving into the technical details, let’s visualize how GRPO works at a high level:",me,G,qn='<img src="./img/2.jpg" alt="deep"/>',re,B,On="Now that we have a visual overview, let’s break down how GRPO works step by step.",oe,R,ce,Z,Kn="The core innovation of GRPO is its approach to evaluating and learning from multiple generated responses simultaneously. Instead of relying on a separate reward model, it compares outputs within the same group to determine which ones should be reinforced.",he,Q,sl="Let’s walk through each step of the algorithm in detail:",ge,S,ye,H,tl="The first step is to generate multiple possible answers for each question. This creates a diverse set of outputs that can be compared against each other.",de,E,el="For each question $q$, the model will generate $G$ outputs (group size) from the trained policy: { ${o<em>1, o_2, o_3, \\dots, o_G}\\pi</em>{\\theta_{\\text{old}}}$ }, $G=8$ where each $o_i$ represents one completion from the model.",ue,N,Me,L,al="To make this concrete, let’s look at a simple arithmetic problem:",fe,X,nl="<li><strong>Question</strong> $q$ : $\\text{Calculate}\\space2 + 2 \\times 6$</li> <li><strong>Outputs</strong> $(G = 8)$: ${o_1:14 \\text{ (correct)}, o_2:16 \\text{ (wrong)}, o_3:10 \\text{ (wrong)}, \\ldots, o_8:14 \\text{ (correct)}}$</li>",we,P,ll="Notice how some of the generated answers are correct (14) while others are wrong (16 or 10). This diversity is crucial for the next step.",ve,V,Te,F,pl="Once we have multiple responses, we need a way to determine which ones are better than others. This is where the advantage calculation comes in.",be,D,$e,W,il="First, we assign a reward score to each generated response. In this example, we’ll use a reward model, but as we learnt in the previous section, we can use any reward returning function.",Je,Y,ml="Assign a RM score to each of the generated responses based on the correctness $r_i$ <em>(e.g. 1 for correct response, 0 for wrong response)</em> then for each of the $r_i$ calculate the following Advantage value",xe,q,Ce,O,Gn,Ue,vp='<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>−</mo><mtext>mean</mtext><mo stretchy="false">(</mo><mo stretchy="false">{</mo><msub><mi>r</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>r</mi><mi>G</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">)</mo></mrow><mrow><mtext>std</mtext><mo stretchy="false">(</mo><mo stretchy="false">{</mo><msub><mi>r</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>r</mi><mi>G</mi></msub><mo stretchy="false">}</mo><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">A_i = \\frac{r_i - \\text{mean}(\\{r_1, r_2, \\ldots, r_G\\})}{\\text{std}(\\{r_1, r_2, \\ldots, r_G\\})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">std</span></span><span class="mopen">({</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">})</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord text"><span class="mord">mean</span></span><span class="mopen">({</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">})</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span>',je,K,_e,ss,rl="Continuing with our arithmetic example for the same example above, imagine we have 8 responses, 4 of which is correct and the rest wrong, therefore;",Ie,ts,ol="<li>Group Average: $mean(r_i) = 0.5$</li> <li>Std: $std(r_i) = 0.53$</li> <li>Advantage Value:<ul><li>Correct response: $A_i = \\frac{1 - 0.5}{0.53}= 0.94$</li> <li>Wrong response: $A_i = \\frac{0 - 0.5}{0.53}= -0.94$</li></ul></li>",Ae,es,ke,as,cl="Now that we have calculated the advantage values, let’s understand what they mean:",ze,ns,hl="This standardization (i.e. $A_i$ weighting) allows the model to assess each response’s relative performance, guiding the optimization process to favour responses that are better than average (high reward) and discourage those that are worse.  For instance if $A_i > 0$, then the $o_i$ is better response than the average level within its group; and if $A_i < 0$, then the $o_i$ then the quality of the response is less than the average (i.e. poor quality/performance).",Ge,ls,gl="For the example above, if $A_i = 0.94 \\text{(correct output)}$ then during optimization steps its generation probability will be increased.",Be,ps,yl="With our advantage values calculated, we’re now ready to update the policy.",Re,is,Ze,ms,dl="The final step is to use these advantage values to update our model so that it becomes more likely to generate good responses in the future.",Qe,rs,Bn,Se,Tp='<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>J</mi><mrow><mi>G</mi><mi>R</mi><mi>P</mi><mi>O</mi></mrow></msub><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mfrac><mn>1</mn><mi>G</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>G</mi></munderover><mi>min</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mrow><msub><mi>π</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>q</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>π</mi><msub><mi>θ</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>q</mi><mo stretchy="false">)</mo></mrow></mfrac><msub><mi>A</mi><mi>i</mi></msub><mtext>clip</mtext><mrow><mo fence="true">(</mo><mfrac><mrow><msub><mi>π</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>q</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>π</mi><msub><mi>θ</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub></msub><mo stretchy="false">(</mo><msub><mi>o</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>q</mi><mo stretchy="false">)</mo></mrow></mfrac><mo separator="true">,</mo><mn>1</mn><mo>−</mo><mi>ϵ</mi><mo separator="true">,</mo><mn>1</mn><mo>+</mo><mi>ϵ</mi><mo fence="true">)</mo></mrow><msub><mi>A</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow><mo>−</mo><mi>β</mi><msub><mi>D</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>π</mi><mi>θ</mi></msub><mi mathvariant="normal">∥</mi><mi mathvariant="normal">∥</mi><msub><mi>π</mi><mrow><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J_{GRPO}(\\theta) = \\left[\\frac{1}{G} \\sum_{i=1}^{G} \\min \\left( \\frac{\\pi_{\\theta}(o_i|q)}{\\pi_{\\theta_{old}}(o_i|q)} A_i \\text{clip}\\left( \\frac{\\pi_{\\theta}(o_i|q)}{\\pi_{\\theta_{old}}(o_i|q)}, 1 - \\epsilon, 1 + \\epsilon \\right) A_i \\right)\\right]- \\beta D_{KL}(\\pi_{\\theta} \\|\\| \\pi_{ref})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">GRPO</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">G</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">G</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2559em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9419em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord">clip</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2559em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9419em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ϵ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ϵ</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∥∥</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span>',He,os,ul="This formula might look intimidating at first, but it’s built from several components that each serve an important purpose. Let’s break them down one by one.",Ee,cs,Ne,hs,Ml="The GRPO update function combines several techniques to ensure stable and effective learning. Let’s examine each component:",Le,gs,Xe,ys,fl="The probability ratio is defined as:",Pe,ds,wl="$\\left(\\frac{\\pi<em>{\\theta}(o_i|q)}{\\pi</em>{\\theta_{old}}(o_i|q)}\\right)$",Ve,us,vl="Intuitively, the formula compares how much the new model’s response probability differs from the old model’s response probability while incorporating a preference for responses that improve the expected outcome.",Fe,Ms,De,fs,Tl="<li>If $\\text{ratio} &gt; 1$, the new model assigns a higher probability to response $o_i$ than the old model.</li> <li>If $\\text{ratio} &lt; 1$, the new model assigns a lower probability to $o_i$</li>",We,ws,bl="This ratio allows us to control how much the model changes at each step, which leads us to the next component.",Ye,vs,qe,Ts,$l="The clipping function is defined as:",Oe,bs,Jl="$\\text{clip}\\left( \\frac{\\pi<em>{\\theta}(o_i|q)}{\\pi</em>{\\theta_{old}}(o_i|q)}, 1 - \\epsilon, 1 + \\epsilon\\right)$",Ke,$s,xl="Limit the ratio discussed above to be within $[1 - \\epsilon, 1 + \\epsilon]$ to avoid/control drastic changes or crazy updates and stepping too far off from the old policy. In other words, it limit how much the probability ratio can increase to help maintaining stability by avoiding updates that push the new model too far from the old one.",sa,Js,ta,xs,Cl="Let’s look at two different scenarios to better understand this clipping function:",ea,Cs,Ul="<li><strong>Case 1</strong>: if the new policy has a probability of 0.9 for a specific response and the old policy has a probabiliy of 0.5, it means this response is getting reinforeced by the new policy to have higher probability, but within a controlled limit which is the clipping to tight up its hands to not get drastic <ul><li>$\\text{Ratio}: \\frac{\\pi<em>{\\theta}(o_i|q)}{\\pi</em>{\\theta_{old}}(o_i|q)} = \\frac{0.9}{0.5} = 1.8  → \\text{Clip}\\space1.2$ (upper bound limit 1.2)</li></ul></li> <li><strong>Case 2</strong>: If the new policy is not in favour of a response (lower probability e.g. 0.2), meaning if the response is not beneficial the increase might be incorrect, and the model would be penalized.<ul><li>$\\text{Ratio}: \\frac{\\pi<em>{\\theta}(o_i|q)}{\\pi</em>{\\theta_{old}}(o_i|q)} = \\frac{0.2}{0.5} = 0.4  →\\text{Clip}\\space0.8$ (lower bound limit 0.8)</li></ul></li>",aa,Us,na,js,jl="<li>The formula encourages the new model to favour responses that the old model underweighted <strong>if they improve the outcome</strong>.</li> <li>If the old model already favoured a response with a high probability, the new model can still reinforce it <strong>but only within a controlled limit $[1 - \\epsilon, 1 + \\epsilon]$, $\\text{(e.g., }\\epsilon = 0.2, \\space \\text{so} \\space [0.8-1.2])$</strong>.</li> <li>If the old model overestimated a response that performs poorly, the new model is <strong>discouraged</strong> from maintaining that high probability.</li> <li>Therefore, intuitively, By incorporating the probability ratio, the objective function ensures that updates to the policy are proportional to the advantage $A_i$ while being moderated to prevent drastic changes. T</li>",la,_s,_l="While the clipping function helps prevent drastic changes, we need one more safeguard to ensure our model doesn’t deviate too far from its original behavior.",pa,Is,ia,As,Il="The KL divergence term is:",ma,ks,Al="$\\beta D<em>{KL}(\\pi</em>{\\theta} || \\pi_{ref})$",ra,zs,kl="In the KL divergence term, the $\\pi<em>{ref}$ is basically the pre-update model’s output, <code>per_token_logps</code> and $\\pi</em>{\\theta}$ is the new model’s output, <code>new_per_token_logps</code>. Theoretically, KL divergence is minimized to prevent the model from deviating too far from its original behavior during optimization. This helps strike a balance between improving performance based on the reward signal and maintaining coherence. In this context, minimizing KL divergence reduces the risk of the model generating nonsensical text or, in the case of mathematical reasoning, producing extremely incorrect answers.",oa,Gs,ca,Bs,zl="<li>A KL divergence penalty keeps the model’s outputs close to its original distribution, preventing extreme shifts.</li> <li>Instead of drifting towards completely irrational outputs, the model would refine its understanding while still allowing some exploration</li>",ha,Rs,ga,Zs,Gl="For those interested in the mathematical details, let’s look at the formal definition:",ya,x,Rn,da,bp='<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo stretchy="false">(</mo><mi>P</mi><mi mathvariant="normal">∥</mi><mi mathvariant="normal">∥</mi><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>X</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">D_{KL}(P \\|\\| Q) = \\sum_{x \\in X} P(x) \\log \\frac{P(x)}{Q(x)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord">∥∥</span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.7487em;vertical-align:-1.3217em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3217em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span>',ua,Ma,Qs,fa,Ss,Bl="The coefficient $\\beta$ controls how strongly we enforce the KL divergence constraint:",wa,Hs,Rl='<li><strong>Higher $\\beta$ (Stronger KL Penalty)</strong><ul><li>More constraint on policy updates. The model remains close to its reference distribution.</li> <li>Can slow down adaptation: The model may struggle to explore better responses.</li></ul></li> <li><strong>Lower $\\beta$ (Weaker KL Penalty)</strong><ul><li>More freedom to update policy: The model can deviate more from the reference.</li> <li>Faster adaptation but risk of instability: The model might learn reward-hacking behaviors.</li> <li>Over-optimization risk: If the reward model is flawed, the policy might generate nonsensical outputs.</li></ul></li> <li><strong>Original</strong> <a href="https://arxiv.org/abs/2402.03300" rel="nofollow">DeepSeekMath</a> paper set this $\\beta= 0.04$</li>',va,Es,Zl="Now that we understand the components of GRPO, let’s see how they work together in a complete example.",Ta,Ns,ba,Ls,Ql="To solidify our understanding of GRPO, let’s walk through a complete example from start to finish.",$a,Xs,Ja,Pt,xa,$p='<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>Q: Calculate </mtext><mn>2</mn><mo>+</mo><mn>2</mn><mo>×</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">\\text{Q: Calculate}\\space2 + 2 \\times 6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">Q: Calculate</span></span><span class="mspace"> </span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6</span></span></span></span></span>',Ca,Ps,Ua,Vs,Sl="First, we generate multiple responses from our model:",ja,Fs,Zn,_a,Jp='<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>o</mi><mn>1</mn></msub><mo>:</mo><mn>14</mn><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>r</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>o</mi><mn>2</mn></msub><mo>:</mo><mn>10</mn><mo stretchy="false">(</mo><mi>w</mi><mi>r</mi><mi>o</mi><mi>n</mi><mi>g</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>o</mi><mn>3</mn></msub><mo>:</mo><mn>16</mn><mo stretchy="false">(</mo><mi>w</mi><mi>r</mi><mi>o</mi><mi>n</mi><mi>g</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>o</mi><mi>G</mi></msub><mo>:</mo><mn>14</mn><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>r</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">{o_1:14(correct), o_2:10 (wrong), o_3:16 (wrong), ... o_G:14(correct)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">14</span><span class="mopen">(</span><span class="mord mathnormal">correc</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">10</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">16</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">ro</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">14</span><span class="mopen">(</span><span class="mord mathnormal">correc</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></span></span>',Ia,Ds,Aa,Ws,Hl="Next, we calculate the advantage values to determine which responses are better than average:",ka,T,Vt,Qn,za,xp='<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>e</mi><mi>a</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">mean(r_i) = 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mord mathnormal">an</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.5</span></span></span></span></span>',Sn,Ft,El="Std: $$std(r_i) = 0.53$$",Hn,Dt,Nl="Advantage Value:<ul><li>Correct response: $A_i = \\frac{1 - 0.5}{0.53}= 0.94$</li> <li>Wrong response: $A_i = \\frac{0 - 0.5}{0.53}= -0.94$</li></ul>",Ga,Ys,Ba,qs,Ll="Finally, we update our model to reinforce the correct responses:",Ra,C,U,En,Wt,Xl="{\\theta",Nn,Za,Cp='<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>Ratio</mtext><mo>:</mo><mfrac><mn>0.7</mn><mn>0.5</mn></mfrac><mo>=</mo><mn>1.4</mn><mo>→</mo><mtext>after Clip </mtext><mn>1.2</mn><mtext> </mtext><mo stretchy="false">(</mo><mi>ϵ</mi><mo>=</mo><mn>0.2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\text{Ratio}: \\frac{0.7}{0.5} = 1.4  →\\text{after Clip}\\space1.2 \\space (\\epsilon = 0.2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord">Ratio</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.5</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.4</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">after Clip</span></span><span class="mspace"> </span><span class="mord">1.2</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0.2</span><span class="mclose">)</span></span></span></span></span>',Ln,Yt,Pl="Then when the target function is re-weighted, the model tends to reinforce the generation of correct output, and the $\\text{KL Divergence}$  limits the deviation from the reference policy.",Qa,Os,Vl="With the theoretical understanding in place, let’s see how GRPO can be implemented in code.",Sa,Ks,Ha,st,Fl="Let’s put everything together in a practical example. The following code demonstrates how to implement GRPO in PyTorch.",Ea,tt,Na,et,Dl="First, we need to load a model and generate multiple responses for a given question:",La,at,Xa,nt,Wl="this initial Generation (Before Any Steps) will output sth like this:",Pa,lt,Va,pt,Fa,it,Yl="Now, we need to determine which responses are correct and assign rewards accordingly:",Da,mt,ql="With GRPO, with the same sample prompt, we generate multiple completions. So for instance, for our prompts of <code>&quot;Solve y = 2x + 1 for x = 2, y = &quot;</code> and <code>Solve y = 2x + 1 for x = 4, y = &quot;</code> we have two group of generated outputs for the given prompt one is say",Wa,rt,Ol="<li><code>[5, 6, 7, 5]</code> and the other is</li> <li><code>[10, 2, 9, 9]</code> while the correct answer is 5 and 9.</li>",Ya,ot,Kl="Note that in practice these reward scores are achieved by a rule-based reward function that assigns rewards based on the correctness of the response or a more complex neural network-based model that can be trained to assign rewards based on the correctness of the response or a mixed of both. But for sake of simplicity let’s say our reward per response is 1 if the response is correct and 0 if it is wrong, therefore;",qa,ct,Oa,ht,sp="next we get the group_wise mean and std of the rewards;",Ka,gt,sn,yt,tp="this will output:",tn,dt,en,ut,ep="Now we can calculate the advantage values for each response:",an,Mt,nn,ft,ap="this will output:",ln,wt,pn,vt,np="which is coming from the Advantage formula above, so:",mn,Tt,rn,bt,lp="however, the shape here is <code>(B*G,) = (8,)</code> but in practice, we need to have the shape of <code>(B, G) = (2, 4)</code> to match the logits shape, right? Therefore, we need to unsqueeze the advantages tensor to have the shape of <code>(B*G, 1) = (8, 1)</code> to match the logits shape.",on,$t,cn,Jt,pp="which will output:",hn,xt,gn,Ct,ip="now we are good, let’s move to the next step of updating the policy model based on the advantage values.",yn,Ut,dn,jt,mp="Finally, we use the advantage values to update our model:",un,_t,Mn,It,rp="Note that the <code>per_token_logps</code> can be achieved by passing the generated outputs to the model and get the logits and then apply the softmax function to get the probabilities <code>F.softmax(logits, dim=-1)</code>.",fn,At,wn,kt,op="<code>per_token_kl</code> can also be calculated as follows:",vn,zt,Tn,Gt,cp='Complete example can be found <a href="./basic_example.py">here</a>. GRPO is also implemented by the excellent TRL team, you can check the implementation <a href="https://github.com/huggingface/trl/blob/main/trl/trainer/grpo_trainer.py" rel="nofollow">TRL/GRPO_trainer</a> for more details.',bn,Bt,$n,Rt,hp="Congratulations! You’ve now learned about Group Relative Policy Optimization (GRPO). To recap what we’ve covered:",Jn,Zt,gp="<li>GRPO compares multiple outputs within a group to determine which ones are better than others, without requiring a separate value model.</li> <li>The advantage calculation standardizes rewards to identify which responses are above or below average.</li> <li>The policy update uses a clipped objective function with a KL divergence penalty to ensure stable learning.</li>",xn,Qt,yp="This approach is particularly powerful for mathematical reasoning tasks, where correctness can be objectively verified. The GRPO method allows for more efficient training compared to traditional RLHF approaches that require a separate critic model.",Cn,St,dp="As you continue exploring GRPO, consider experimenting with different group sizes, reward functions, and KL penalty coefficients to see how they affect your model’s performance.",Un,Ht,up="Happy training! 🚀",jn,Et,_n,Nt,Mp='<li><a href="https://github.com/natolambert/rlhf-book" rel="nofollow">RLHF Book by Nathan Lambert</a></li> <li><a href="https://huggingface.co/papers/2412.19437" rel="nofollow">DeepSeek-V3 Technical Report</a></li> <li><a href="https://huggingface.co/papers/2402.03300" rel="nofollow">DeepSeekMath</a></li>',In,Kt,An;return _=new d({props:{title:"Advanced Understanding of Group Relative Policy Optimization (GRPO) in DeepSeekMath",local:"advanced-understanding-of-group-relative-policy-optimization-grpo-in-deepseekmath",headingTag:"h1"}}),J=new kp({props:{$$slots:{default:[zp]},$$scope:{ctx:te}}}),R=new d({props:{title:"The GRPO Algorithm",local:"the-grpo-algorithm",headingTag:"h2"}}),S=new d({props:{title:"Step 1: Group Sampling",local:"step-1-group-sampling",headingTag:"h3"}}),N=new d({props:{title:"Example:",local:"example",headingTag:"h4"}}),V=new d({props:{title:"Step 2: Advantage Calculation",local:"step-2-advantage-calculation",headingTag:"h3"}}),D=new d({props:{title:"Reward Distribution:",local:"reward-distribution",headingTag:"h4"}}),q=new d({props:{title:"Advantage Value Formula:",local:"advantage-value-formula",headingTag:"h4"}}),K=new d({props:{title:"Example:",local:"example",headingTag:"h4"}}),es=new d({props:{title:"Interpretation:",local:"interpretation",headingTag:"h4"}}),is=new d({props:{title:"Step 3: Policy Update",local:"step-3-policy-update",headingTag:"h3"}}),cs=new d({props:{title:"Key Components of the Target Function",local:"key-components-of-the-target-function",headingTag:"h2"}}),gs=new d({props:{title:"1. Probability Ratio",local:"1-probability-ratio",headingTag:"h3"}}),Ms=new d({props:{title:"Interpretation:",local:"interpretation",headingTag:"h4"}}),vs=new d({props:{title:"2. Clip Function",local:"2-clip-function",headingTag:"h3"}}),Js=new d({props:{title:"Example $\\space \\text{suppose}(\\epsilon = 0.2)$",local:"example-space-textsupposeepsilon--02",headingTag:"h4"}}),Us=new d({props:{title:"Interpretation:",local:"interpretation",headingTag:"h4"}}),Is=new d({props:{title:"3. KL Divergence",local:"3-kl-divergence",headingTag:"h3"}}),Gs=new d({props:{title:"Interpretation",local:"interpretation",headingTag:"h4"}}),Rs=new d({props:{title:"Math Definition",local:"math-definition",headingTag:"h4"}}),Qs=new d({props:{title:"The Role of $\\beta$ Parameter",local:"the-role-of-beta-parameter",headingTag:"h4"}}),Ns=new d({props:{title:"Worked Example with GRPO",local:"worked-example-with-grpo",headingTag:"h2"}}),Xs=new d({props:{title:"Example Problem",local:"example-problem",headingTag:"h3"}}),Ps=new d({props:{title:"Step 1: Group Sampling",local:"step-1-group-sampling",headingTag:"h3"}}),Ds=new d({props:{title:"Step 2: Advantage Calculation",local:"step-2-advantage-calculation",headingTag:"h3"}}),Ys=new d({props:{title:"Step 3: Policy Update",local:"step-3-policy-update",headingTag:"h3"}}),Ks=new d({props:{title:"Implementation Example",local:"implementation-example",headingTag:"h2"}}),tt=new d({props:{title:"1. Loading the Model and Generating Responses",local:"1-loading-the-model-and-generating-responses",headingTag:"h3"}}),at=new f({props:{code:"aW1wb3J0JTIwdG9yY2glMEFpbXBvcnQlMjB0b3JjaC5ubi5mdW5jdGlvbmFsJTIwYXMlMjBGJTBBZnJvbSUyMHRyYW5zZm9ybWVycyUyMGltcG9ydCUyMEF1dG9Nb2RlbEZvckNhdXNhbExNJTJDJTIwQXV0b1Rva2VuaXplciUwQSUwQSUyMyUyMExvYWQlMjB0aGUlMjBtb2RlbCUyMGFuZCUyMHRva2VuaXplciUwQW1vZGVsX25hbWUlMjAlM0QlMjAlMjJRd2VuJTJGUXdlbjItTWF0aC0xLjVCJTIyJTBBbW9kZWwlMjAlM0QlMjBBdXRvTW9kZWxGb3JDYXVzYWxMTS5mcm9tX3ByZXRyYWluZWQobW9kZWxfbmFtZSklMEF0b2tlbml6ZXIlMjAlM0QlMjBBdXRvVG9rZW5pemVyLmZyb21fcHJldHJhaW5lZChtb2RlbF9uYW1lKSUwQW1vZGVsLmV2YWwoKSUwQSUwQSUyMyUyME1vdmUlMjBtb2RlbCUyMHRvJTIwR1BVJTIwaWYlMjBhdmFpbGFibGUlMEFkZXZpY2UlMjAlM0QlMjB0b3JjaC5kZXZpY2UoJTIyY3VkYSUyMiUyMGlmJTIwdG9yY2guY3VkYS5pc19hdmFpbGFibGUoKSUyMGVsc2UlMjAlMjJjcHUlMjIpJTBBbW9kZWwudG8oZGV2aWNlKSUwQSUwQSUyMyUyMElucHV0JTIwcHJvbXB0JTBBcHJvbXB0JTIwJTNEJTIwJTIyU29sdmUlMjB5JTIwJTNEJTIwMnglMjAlMkIlMjAxJTIwZm9yJTIweCUyMCUzRCUyMDIlMkMlMjB5JTIwJTNEJTIwJTIyJTIwJTIwJTIzJTIwQ29ycmVjdCUyMGFuc3dlciUzQSUyMDUlMEFpbnB1dHMlMjAlM0QlMjB0b2tlbml6ZXIocHJvbXB0JTJDJTIwcmV0dXJuX3RlbnNvcnMlM0QlMjJwdCUyMiUyQyUyMHBhZGRpbmclM0RUcnVlKSUwQWlucHV0X2lkcyUyMCUzRCUyMGlucHV0cyU1QiUyMmlucHV0X2lkcyUyMiU1RC50byhkZXZpY2UpJTIwJTIwJTIzJTIwU2hhcGUlM0ElMjAoMSUyQyUyMHByb21wdF9sZW4pJTBBYXR0ZW50aW9uX21hc2slMjAlM0QlMjBpbnB1dHMlNUIlMjJhdHRlbnRpb25fbWFzayUyMiU1RC50byhkZXZpY2UpJTBBJTBBJTIzJTIwU3RlcCUyMDElM0ElMjBHZW5lcmF0ZSUyMDglMjByZXNwb25zZXMlMjAoQiUyMCUzRCUyMDIlMjBncm91cHMlMkMlMjBHJTIwJTNEJTIwNCUyMHJlc3BvbnNlcyUyMHBlciUyMGdyb3VwKSUwQWJhdGNoX3NpemUlMkMlMjBudW1fZ2VuZXJhdGlvbnMlMjAlM0QlMjAyJTJDJTIwNCUwQW91dHB1dHMlMjAlM0QlMjBtb2RlbC5nZW5lcmF0ZSglMEElMjAlMjAlMjAlMjBpbnB1dF9pZHMlM0RpbnB1dF9pZHMlMkMlMjAlMjAlMjMlMjBTaGFwZSUzQSUyMCgxJTJDJTIwcHJvbXB0X2xlbiklMEElMjAlMjAlMjAlMjBhdHRlbnRpb25fbWFzayUzRGF0dGVudGlvbl9tYXNrJTJDJTBBJTIwJTIwJTIwJTIwbWF4X25ld190b2tlbnMlM0QxJTJDJTIwJTIwJTIzJTIwc2VxX2xlbiUyMCUzRCUyMDElMjAoc2luZ2xlJTIwdG9rZW4lMjBwZXIlMjByZXNwb25zZSklMEElMjAlMjAlMjAlMjBudW1fcmV0dXJuX3NlcXVlbmNlcyUzRGJhdGNoX3NpemUlMjAqJTIwbnVtX2dlbmVyYXRpb25zJTJDJTIwJTIwJTIzJTIwOCUyMHJlc3BvbnNlcyUyMHRvdGFsJTBBJTIwJTIwJTIwJTIwZG9fc2FtcGxlJTNEVHJ1ZSUyQyUwQSUyMCUyMCUyMCUyMHRvcF9rJTNEMTAlMkMlMEElMjAlMjAlMjAlMjB0ZW1wZXJhdHVyZSUzRDAuNyUyQyUwQSUyMCUyMCUyMCUyMHBhZF90b2tlbl9pZCUzRHRva2VuaXplci5lb3NfdG9rZW5faWQlMkMlMEElMjAlMjAlMjAlMjByZXR1cm5fZGljdF9pbl9nZW5lcmF0ZSUzRFRydWUlMkMlMEElMjAlMjAlMjAlMjBvdXRwdXRfc2NvcmVzJTNEVHJ1ZSUyQyUwQSk=",highlighted:`<span class="hljs-keyword">import</span> torch
<span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F
<span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> AutoModelForCausalLM, AutoTokenizer

<span class="hljs-comment"># Load the model and tokenizer</span>
model_name = <span class="hljs-string">&quot;Qwen/Qwen2-Math-1.5B&quot;</span>
model = AutoModelForCausalLM.from_pretrained(model_name)
tokenizer = AutoTokenizer.from_pretrained(model_name)
model.<span class="hljs-built_in">eval</span>()

<span class="hljs-comment"># Move model to GPU if available</span>
device = torch.device(<span class="hljs-string">&quot;cuda&quot;</span> <span class="hljs-keyword">if</span> torch.cuda.is_available() <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;cpu&quot;</span>)
model.to(device)

<span class="hljs-comment"># Input prompt</span>
prompt = <span class="hljs-string">&quot;Solve y = 2x + 1 for x = 2, y = &quot;</span>  <span class="hljs-comment"># Correct answer: 5</span>
inputs = tokenizer(prompt, return_tensors=<span class="hljs-string">&quot;pt&quot;</span>, padding=<span class="hljs-literal">True</span>)
input_ids = inputs[<span class="hljs-string">&quot;input_ids&quot;</span>].to(device)  <span class="hljs-comment"># Shape: (1, prompt_len)</span>
attention_mask = inputs[<span class="hljs-string">&quot;attention_mask&quot;</span>].to(device)

<span class="hljs-comment"># Step 1: Generate 8 responses (B = 2 groups, G = 4 responses per group)</span>
batch_size, num_generations = <span class="hljs-number">2</span>, <span class="hljs-number">4</span>
outputs = model.generate(
    input_ids=input_ids,  <span class="hljs-comment"># Shape: (1, prompt_len)</span>
    attention_mask=attention_mask,
    max_new_tokens=<span class="hljs-number">1</span>,  <span class="hljs-comment"># seq_len = 1 (single token per response)</span>
    num_return_sequences=batch_size * num_generations,  <span class="hljs-comment"># 8 responses total</span>
    do_sample=<span class="hljs-literal">True</span>,
    top_k=<span class="hljs-number">10</span>,
    temperature=<span class="hljs-number">0.7</span>,
    pad_token_id=tokenizer.eos_token_id,
    return_dict_in_generate=<span class="hljs-literal">True</span>,
    output_scores=<span class="hljs-literal">True</span>,
)`,wrap:!1}}),lt=new f({props:{code:"T3V0cHV0JTIwMSUzQSUyMDUuMCUwQU91dHB1dCUyMDIlM0ElMjA2LjAlMEFPdXRwdXQlMjAzJTNBJTIwNy4wJTBBT3V0cHV0JTIwNCUzQSUyMDUuMCUwQU91dHB1dCUyMDUlM0ElMjAxMC4wJTBBT3V0cHV0JTIwNiUzQSUyMDIuMCUwQU91dHB1dCUyMDclM0ElMjA1LjAlMEFPdXRwdXQlMjA4JTNBJTIwNS4w",highlighted:`Output 1: 5.0
Output 2: 6.0
Output 3: 7.0
Output 4: 5.0
Output 5: 10.0
Output 6: 2.0
Output 7: 5.0
Output 8: 5.0`,wrap:!1}}),pt=new d({props:{title:"2. Calculating Rewards",local:"2-calculating-rewards",headingTag:"h3"}}),ct=new f({props:{code:"cmV3YXJkXzElMjAlM0QlMjAlNUIxJTJDJTIwMCUyQyUyMDAlMkMlMjAxJTVEJTBBcmV3YXJkXzIlMjAlM0QlMjAlNUIwJTJDJTIwMCUyQyUyMDElMkMlMjAxJTVE",highlighted:`reward_1 = [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>]
reward_2 = [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>]`,wrap:!1}}),gt=new f({props:{code:"JTIzJTIwU2hhcGUlM0ElMjAoQiUyMColMjBHJTJDKSUyMCUzRCUyMCg4JTJDKSUyMGJjJTIwd2UlMjBoYXZlJTIwMiUyMGdyb3VwcyUyMG9mJTIwNCUyMGdlbmVyYXRpb25zJTIwdGhhdCUyMHdlJTIwZmxhdHRlbiUwQXJld2FyZHMlMjAlM0QlMjB0b3JjaC50ZW5zb3IoJTVCMSUyQyUyMDAlMkMlMjAwJTJDJTIwMSUyQyUyMDAlMkMlMjAwJTJDJTIwMSUyQyUyMDElNUQlMkMlMjBkdHlwZSUzRHRvcmNoLmZsb2F0MzIpJTBBbnVtX2dlbmVyYXRpb25zJTIwJTNEJTIwNCUwQSUwQSUyMyUyMEdyb3VwJTIwcmV3YXJkcyUzQSUyMFNoYXBlJTIwKEIlMkMlMjBHKSUyMCUzRCUyMDIlMkMlMjA0KSUwQXJld2FyZHNfZ3JvdXBlZCUyMCUzRCUyMHJld2FyZHMudmlldygtMSUyQyUyMG51bV9nZW5lcmF0aW9ucyklMEElMEElMjMlMjBNZWFuJTIwcGVyJTIwZ3JvdXAlM0ElMjBTaGFwZSUyMChCJTJDKSUyMCUzRCUyMCgyJTJDKSUwQW1lYW5fZ3JvdXBlZF9yZXdhcmRzJTIwJTNEJTIwcmV3YXJkc19ncm91cGVkLm1lYW4oZGltJTNEMSklMEElMEElMjMlMjBTdGQlMjBwZXIlMjBncm91cCUzQSUyMFNoYXBlJTIwKEIlMkMpJTIwJTNEJTIwKDIlMkMpJTBBc3RkX2dyb3VwZWRfcmV3YXJkcyUyMCUzRCUyMHJld2FyZHNfZ3JvdXBlZC5zdGQoZGltJTNEMSklMEElMEElMjMlMjBCcm9hZGNhc3QlMjB0byUyMG1hdGNoJTIwcmV3YXJkcyUyMGFuZCUyMG5vcm1hbGl6ZSUzQSUyMFNoYXBlJTIwKEIlMjAqJTIwRyUyQyklMjAlM0QlMjAoOCUyQyklMEElMjMlMjB3aHklMjB3ZSUyMG5lZWQlMjB0byUyMGJyb2FkY2FzdCUzRiUyMGJlY2F1c2UlMjB3ZSUyMG5lZWQlMjB0byUyMGNhbGN1bGF0ZSUyMHRoZSUyMGFkdmFudGFnZSUyMHZhbHVlcyUyMGZvciUyMGVhY2glMjByZXNwb25zZSUyMHdpdGhpbiUyMHRoZSUyMGdyb3VwJTBBbWVhbl9ncm91cGVkX3Jld2FyZHMlMjAlM0QlMjBtZWFuX2dyb3VwZWRfcmV3YXJkcy5yZXBlYXRfaW50ZXJsZWF2ZShudW1fZ2VuZXJhdGlvbnMlMkMlMjBkaW0lM0QwKSUwQXN0ZF9ncm91cGVkX3Jld2FyZHMlMjAlM0QlMjBzdGRfZ3JvdXBlZF9yZXdhcmRzLnJlcGVhdF9pbnRlcmxlYXZlKG51bV9nZW5lcmF0aW9ucyUyQyUyMGRpbSUzRDAp",highlighted:`<span class="hljs-comment"># Shape: (B * G,) = (8,) bc we have 2 groups of 4 generations that we flatten</span>
rewards = torch.tensor([<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>], dtype=torch.float32)
num_generations = <span class="hljs-number">4</span>

<span class="hljs-comment"># Group rewards: Shape (B, G) = 2, 4)</span>
rewards_grouped = rewards.view(-<span class="hljs-number">1</span>, num_generations)

<span class="hljs-comment"># Mean per group: Shape (B,) = (2,)</span>
mean_grouped_rewards = rewards_grouped.mean(dim=<span class="hljs-number">1</span>)

<span class="hljs-comment"># Std per group: Shape (B,) = (2,)</span>
std_grouped_rewards = rewards_grouped.std(dim=<span class="hljs-number">1</span>)

<span class="hljs-comment"># Broadcast to match rewards and normalize: Shape (B * G,) = (8,)</span>
<span class="hljs-comment"># why we need to broadcast? because we need to calculate the advantage values for each response within the group</span>
mean_grouped_rewards = mean_grouped_rewards.repeat_interleave(num_generations, dim=<span class="hljs-number">0</span>)
std_grouped_rewards = std_grouped_rewards.repeat_interleave(num_generations, dim=<span class="hljs-number">0</span>)`,wrap:!1}}),dt=new f({props:{code:"R3JvdXBlZCUyMFJld2FyZHMlM0ElMjB0ZW5zb3IoJTVCJTVCMS4lMkMlMjAwLiUyQyUyMDAuJTJDJTIwMS4lNUQlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlNUIwLiUyQyUyMDAuJTJDJTIwMS4lMkMlMjAxLiU1RCU1RCklMEFNZWFuJTIwcGVyJTIwZ3JvdXAlM0ElMjB0ZW5zb3IoJTVCMC41MDAwJTJDJTIwMC41MDAwJTVEKSUwQVN0ZCUyMHBlciUyMGdyb3VwJTNBJTIwdGVuc29yKCU1QjAuNTc3NCUyQyUyMDAuNTc3NCU1RCklMEFCcm9hZGNhc3RlZCUyME1lYW4lM0ElMjB0ZW5zb3IoJTVCMC41MDAwJTJDJTIwMC41MDAwJTJDJTIwMC41MDAwJTJDJTIwMC41MDAwJTJDJTIwMC41MDAwJTJDJTIwMC41MDAwJTJDJTIwMC41MDAwJTJDJTIwMC41MDAwJTVEKSUwQUJyb2FkY2FzdGVkJTIwU3RkJTNBJTIwdGVuc29yKCU1QjAuNTc3NCUyQyUyMDAuNTc3NCUyQyUyMDAuNTc3NCUyQyUyMDAuNTc3NCUyQyUyMDAuNTc3NCUyQyUyMDAuNTc3NCUyQyUyMDAuNTc3NCUyQyUyMDAuNTc3NCU1RCk=",highlighted:`Grouped Rewards: tensor([[1., 0., 0., 1.],
                        [0., 0., 1., 1.]])
Mean per group: tensor([0.5000, 0.5000])
Std per group: tensor([0.5774, 0.5774])
Broadcasted Mean: tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000])
Broadcasted Std: tensor([0.5774, 0.5774, 0.5774, 0.5774, 0.5774, 0.5774, 0.5774, 0.5774])`,wrap:!1}}),Mt=new f({props:{code:"JTIzJTIwQWR2YW50YWdlcyUzQSUyMFNoYXBlJTIwKEIlMjAqJTIwRyUyQyklMjAlM0QlMjAoOCUyQyklMEFhZHZhbnRhZ2VzJTIwJTNEJTIwKHJld2FyZHMlMjAtJTIwbWVhbl9ncm91cGVkX3Jld2FyZHMpJTIwJTJGJTIwKHN0ZF9ncm91cGVkX3Jld2FyZHMlMjAlMkIlMjAxZS04KQ==",highlighted:`<span class="hljs-comment"># Advantages: Shape (B * G,) = (8,)</span>
advantages = (rewards - mean_grouped_rewards) / (std_grouped_rewards + <span class="hljs-number">1e-8</span>)`,wrap:!1}}),wt=new f({props:{code:"QWR2YW50YWdlcyUzQSUyMHRlbnNvciglNUIlMjAwLjg2NTklMkMlMjAtMC44NjYwJTJDJTIwLTAuODY2MCUyQyUyMCUyMDAuODY1OSUyQyUyMC0wLjg2NjAlMkMlMjAtMC44NjYwJTJDJTIwJTIwMC44NjU5JTJDJTIwJTIwMC44NjU5JTVEKQ==",highlighted:"Advantages: tensor([ 0.8659, -0.8660, -0.8660,  0.8659, -0.8660, -0.8660,  0.8659,  0.8659])",wrap:!1}}),Tt=new f({props:{code:"Rm9yJTIwcmV3YXJkXzElMjAlM0QlMjAlNUIxJTJDJTIwMCUyQyUyMDAlMkMlMjAxJTVEJTNBJTBBMSUyMC0lMjAwLjUlMjAlMkYlMjAwLjU3NzQlMjAlRTIlODklODglMjAwLjg2NTklMEEwJTIwLSUyMDAuNSUyMCUyRiUyMDAuNTc3NCUyMCVFMiU4OSU4OCUyMC0wLjg2NjAlMEFGb3IlMjByZXdhcmRfMiUyMCUzRCUyMCU1QjAlMkMlMjAwJTJDJTIwMSUyQyUyMDElNUQlM0ElMjBTYW1lJTIwcGF0dGVybi4=",highlighted:`For reward_1 = [1, 0, 0, 1]:
1 - 0.5 / 0.5774 ≈ 0.8659
0 - 0.5 / 0.5774 ≈ -0.8660
For reward_2 = [0, 0, 1, 1]: Same pattern.`,wrap:!1}}),$t=new f({props:{code:"JTIzJTIwU2hhcGUlMjAoQiUyMColMjBHJTJDJTIwMSklMjAlM0QlMjAoOCUyQyUyMDEpJTIwdG8lMjBtYXRjaCUyMHRoZSUyMGxvZ2l0cyUyMHNoYXBlJTBBYWR2YW50YWdlcyUyMCUzRCUyMGFkdmFudGFnZXMudW5zcXVlZXplKDEp",highlighted:`<span class="hljs-comment"># Shape (B * G, 1) = (8, 1) to match the logits shape</span>
advantages = advantages.unsqueeze(<span class="hljs-number">1</span>)`,wrap:!1}}),xt=new f({props:{code:"QWR2YW50YWdlcyUzQSUyMHRlbnNvciglNUIlNUIlMjAwLjg2NTklNUQlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlNUItMC44NjYwJTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTVCLTAuODY2MCU1RCUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU1QiUyMDAuODY1OSU1RCUyQyUwQSUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCU1Qi0wLjg2NjAlNUQlMkMlMEElMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlMjAlNUItMC44NjYwJTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTVCJTIwMC44NjU5JTVEJTJDJTBBJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTIwJTVCJTIwMC44NjU5JTVEJTVEKQ==",highlighted:`Advantages: tensor([[ 0.8659],
                    [-0.8660],
                    [-0.8660],
                    [ 0.8659],
                    [-0.8660],
                    [-0.8660],
                    [ 0.8659],
                    [ 0.8659]])`,wrap:!1}}),Ut=new d({props:{title:"3. Updating the Policy",local:"3-updating-the-policy",headingTag:"h3"}}),_t=new f({props:{code:"JTIzJTIwQ29tcHV0ZSUyMHByb2JhYmlsaXR5JTIwcmF0aW8lMjBiZXR3ZWVuJTIwbmV3JTIwYW5kJTIwb2xkJTIwcG9saWNpZXMlMEFyYXRpbyUyMCUzRCUyMHRvcmNoLmV4cCglMEElMjAlMjAlMjAlMjBuZXdfcGVyX3Rva2VuX2xvZ3BzJTIwLSUyMHBlcl90b2tlbl9sb2dwcyUwQSklMjAlMjAlMjMlMjBTaGFwZSUzQSUyMChCKkclMkMlMjBzZXFfbGVuKSUyMHNlcV9sZW4lMjBpcyUyMHRoZSUyMGxlbmd0aCUyMG9mJTIwdGhlJTIwb3V0cHV0JTIwaS5lLiUyMHRoZSUyMG51bSUyMG9mJTIwZ2VuZXJhdGVkJTIwdG9rZW5zJTIwc28lMjBoZXJlJTIwZm9yJTIwc2ltcGxpY2l0eSUyMGxldCdzJTIwYXNzdW1lJTIwaXQlMjBpcyUyMDElMjAlMjMlMjAoOCUyQyUyMDEp",highlighted:`<span class="hljs-comment"># Compute probability ratio between new and old policies</span>
ratio = torch.exp(
    new_per_token_logps - per_token_logps
)  <span class="hljs-comment"># Shape: (B*G, seq_len) seq_len is the length of the output i.e. the num of generated tokens so here for simplicity let&#x27;s assume it is 1 # (8, 1)</span>`,wrap:!1}}),At=new f({props:{code:"JTIzJTIwQ2xpcHBpbmclMjBGdW5jdGlvbiUwQWVwcyUyMCUzRCUyMHNlbGYuY2xpcHJhbmdlJTIwJTIwJTIzJTIwZS5nLiUyMDAuMiUwQXBnX2xvc3NlczElMjAlM0QlMjAtYWR2YW50YWdlcyUyMColMjByYXRpbyUyMCUyMCUyMyUyMFNoYXBlJTNBJTIwKEIqRyUyQyUyMHNlcV9sZW4pJTIwJTIwJTIzKDglMkMlMjAxKSUwQXBnX2xvc3NlczIlMjAlM0QlMjAtYWR2YW50YWdlcyUyMColMjB0b3JjaC5jbGFtcCglMEElMjAlMjAlMjAlMjByYXRpbyUyQyUyMDEuMCUyMC0lMjBlcHMlMkMlMjAxLjAlMjAlMkIlMjBlcHMlMEEpJTIwJTIwJTIzJTIwU2hhcGUlM0ElMjAoQipHJTJDJTIwc2VxX2xlbiklMjAlMjMoOCUyQyUyMDEpJTBBcGdfbG9zc19tYXglMjAlM0QlMjB0b3JjaC5tYXgocGdfbG9zc2VzMSUyQyUyMHBnX2xvc3NlczIpJTIwJTIwJTIzJTIwU2hhcGUlM0ElMjAoQipHJTJDJTIwc2VxX2xlbiklMjAlMjMoOCUyQyUyMDEpJTBBJTBBJTBBJTIzJTIwTm93JTIwQ29tYmluZSUyMHdpdGglMjBLTCUyMHBlbmFsdHklMjAlMjMlMjBTaGFwZSUzQSUyMChCKkclMkMlMjBzZXFfbGVuKSUyMCUyMyg4JTJDJTIwMSklMEFwZXJfdG9rZW5fbG9zcyUyMCUzRCUyMHBnX2xvc3NfbWF4JTIwJTJCJTIwc2VsZi5iZXRhJTIwKiUyMHBlcl90b2tlbl9rbA==",highlighted:`<span class="hljs-comment"># Clipping Function</span>
eps = self.cliprange  <span class="hljs-comment"># e.g. 0.2</span>
pg_losses1 = -advantages * ratio  <span class="hljs-comment"># Shape: (B*G, seq_len)  #(8, 1)</span>
pg_losses2 = -advantages * torch.clamp(
    ratio, <span class="hljs-number">1.0</span> - eps, <span class="hljs-number">1.0</span> + eps
)  <span class="hljs-comment"># Shape: (B*G, seq_len) #(8, 1)</span>
pg_loss_max = torch.<span class="hljs-built_in">max</span>(pg_losses1, pg_losses2)  <span class="hljs-comment"># Shape: (B*G, seq_len) #(8, 1)</span>


<span class="hljs-comment"># Now Combine with KL penalty # Shape: (B*G, seq_len) #(8, 1)</span>
per_token_loss = pg_loss_max + self.beta * per_token_kl`,wrap:!1}}),zt=new f({props:{code:"JTIzJTIwU2hhcGUlM0ElMjAoQipHJTJDJTIwc2VxX2xlbiklMjAlMjMoOCUyQyUyMDEpJTBBcGVyX3Rva2VuX2tsJTIwJTNEJTIwRi5rbF9kaXYoJTBBJTIwJTIwJTIwJTIwRi5sb2dfc29mdG1heChuZXdfcGVyX3Rva2VuX2xvZ3BzJTJDJTIwZGltJTNELTEpJTJDJTBBJTIwJTIwJTIwJTIwRi5zb2Z0bWF4KHBlcl90b2tlbl9sb2dwcyUyQyUyMGRpbSUzRC0xKSUyQyUwQSUyMCUyMCUyMCUyMHJlZHVjdGlvbiUzRCUyMm5vbmUlMjIlMkMlMEEpLnN1bShkaW0lM0QtMSUyQyUyMGtlZXBkaW0lM0RUcnVlKQ==",highlighted:`<span class="hljs-comment"># Shape: (B*G, seq_len) #(8, 1)</span>
per_token_kl = F.kl_div(
    F.log_softmax(new_per_token_logps, dim=-<span class="hljs-number">1</span>),
    F.softmax(per_token_logps, dim=-<span class="hljs-number">1</span>),
    reduction=<span class="hljs-string">&quot;none&quot;</span>,
).<span class="hljs-built_in">sum</span>(dim=-<span class="hljs-number">1</span>, keepdim=<span class="hljs-literal">True</span>)`,wrap:!1}}),Bt=new d({props:{title:"Summary and Next Steps",local:"summary-and-next-steps",headingTag:"h2"}}),Et=new d({props:{title:"References",local:"references",headingTag:"h2"}}),{c(){M=p("meta"),v=n(),j=p("p"),ee=n(),r(_.$$.fragment),ae=n(),r(J.$$.fragment),ne=n(),I=p("p"),I.textContent=Fn,le=n(),A=p("p"),A.textContent=Dn,pe=n(),k=p("p"),k.textContent=Wn,ie=n(),z=p("p"),z.textContent=Yn,me=n(),G=p("p"),G.innerHTML=qn,re=n(),B=p("p"),B.textContent=On,oe=n(),r(R.$$.fragment),ce=n(),Z=p("p"),Z.textContent=Kn,he=n(),Q=p("p"),Q.textContent=sl,ge=n(),r(S.$$.fragment),ye=n(),H=p("p"),H.textContent=tl,de=n(),E=p("p"),E.innerHTML=el,ue=n(),r(N.$$.fragment),Me=n(),L=p("p"),L.textContent=al,fe=n(),X=p("ul"),X.innerHTML=nl,we=n(),P=p("p"),P.textContent=ll,ve=n(),r(V.$$.fragment),Te=n(),F=p("p"),F.textContent=pl,be=n(),r(D.$$.fragment),$e=n(),W=p("p"),W.textContent=il,Je=n(),Y=p("p"),Y.innerHTML=ml,xe=n(),r(q.$$.fragment),Ce=n(),O=p("p"),Gn=b(`The key insight of GRPO is that we don’t need absolute measures of quality - we can compare outputs within the same group. This is done using standardization:
`),Ue=new Lt(!1),je=n(),r(K.$$.fragment),_e=n(),ss=p("p"),ss.textContent=rl,Ie=n(),ts=p("ul"),ts.innerHTML=ol,Ae=n(),r(es.$$.fragment),ke=n(),as=p("p"),as.textContent=cl,ze=n(),ns=p("p"),ns.textContent=hl,Ge=n(),ls=p("p"),ls.textContent=gl,Be=n(),ps=p("p"),ps.textContent=yl,Re=n(),r(is.$$.fragment),Ze=n(),ms=p("p"),ms.textContent=dl,Qe=n(),rs=p("p"),Bn=b(`The target function for policy update is:
`),Se=new Lt(!1),He=n(),os=p("p"),os.textContent=ul,Ee=n(),r(cs.$$.fragment),Ne=n(),hs=p("p"),hs.textContent=Ml,Le=n(),r(gs.$$.fragment),Xe=n(),ys=p("p"),ys.textContent=fl,Pe=n(),ds=p("p"),ds.innerHTML=wl,Ve=n(),us=p("p"),us.textContent=vl,Fe=n(),r(Ms.$$.fragment),De=n(),fs=p("ul"),fs.innerHTML=Tl,We=n(),ws=p("p"),ws.textContent=bl,Ye=n(),r(vs.$$.fragment),qe=n(),Ts=p("p"),Ts.textContent=$l,Oe=n(),bs=p("p"),bs.innerHTML=Jl,Ke=n(),$s=p("p"),$s.textContent=xl,sa=n(),r(Js.$$.fragment),ta=n(),xs=p("p"),xs.textContent=Cl,ea=n(),Cs=p("ul"),Cs.innerHTML=Ul,aa=n(),r(Us.$$.fragment),na=n(),js=p("ul"),js.innerHTML=jl,la=n(),_s=p("p"),_s.textContent=_l,pa=n(),r(Is.$$.fragment),ia=n(),As=p("p"),As.textContent=Il,ma=n(),ks=p("p"),ks.innerHTML=Al,ra=n(),zs=p("p"),zs.innerHTML=kl,oa=n(),r(Gs.$$.fragment),ca=n(),Bs=p("ul"),Bs.innerHTML=zl,ha=n(),r(Rs.$$.fragment),ga=n(),Zs=p("p"),Zs.textContent=Gl,ya=n(),x=p("p"),Rn=b("Recall that KL distance is defined as follows:"),da=new Lt(!1),ua=b(`
In RLHF, the two distributions of interest are often the distribution of the new model version, P(x), and a distribution of the reference policy, Q(x).`),Ma=n(),r(Qs.$$.fragment),fa=n(),Ss=p("p"),Ss.textContent=Bl,wa=n(),Hs=p("ul"),Hs.innerHTML=Rl,va=n(),Es=p("p"),Es.textContent=Zl,Ta=n(),r(Ns.$$.fragment),ba=n(),Ls=p("p"),Ls.textContent=Ql,$a=n(),r(Xs.$$.fragment),Ja=n(),Pt=p("p"),xa=new Lt(!1),Ca=n(),r(Ps.$$.fragment),Ua=n(),Vs=p("p"),Vs.textContent=Sl,ja=n(),Fs=p("p"),Zn=b(`Generate $(G = 8)$ responses, $4$ of which are correct answer ($14, \\text{reward=} 1$) and $4$ incorrect $\\text{(reward= 0)}$, Therefore:
`),_a=new Lt(!1),Ia=n(),r(Ds.$$.fragment),Aa=n(),Ws=p("p"),Ws.textContent=Hl,ka=n(),T=p("ul"),Vt=p("li"),Qn=b("Group Average: "),za=new Lt(!1),Sn=n(),Ft=p("li"),Ft.textContent=El,Hn=n(),Dt=p("li"),Dt.innerHTML=Nl,Ga=n(),r(Ys.$$.fragment),Ba=n(),qs=p("p"),qs.textContent=Ll,Ra=n(),C=p("ul"),U=p("li"),En=b("Assuming the probability of old policy ($\\pi"),Wt=p("em"),Wt.textContent=Xl,Nn=b("{old}}$) for a correct output $o_1$ is $0.5$ and the new policy increases it to $0.7$ then:"),Za=new Lt(!1),Ln=n(),Yt=p("li"),Yt.textContent=Pl,Qa=n(),Os=p("p"),Os.textContent=Vl,Sa=n(),r(Ks.$$.fragment),Ha=n(),st=p("p"),st.textContent=Fl,Ea=n(),r(tt.$$.fragment),Na=n(),et=p("p"),et.textContent=Dl,La=n(),r(at.$$.fragment),Xa=n(),nt=p("p"),nt.textContent=Wl,Pa=n(),r(lt.$$.fragment),Va=n(),r(pt.$$.fragment),Fa=n(),it=p("p"),it.textContent=Yl,Da=n(),mt=p("p"),mt.innerHTML=ql,Wa=n(),rt=p("ul"),rt.innerHTML=Ol,Ya=n(),ot=p("p"),ot.textContent=Kl,qa=n(),r(ct.$$.fragment),Oa=n(),ht=p("p"),ht.textContent=sp,Ka=n(),r(gt.$$.fragment),sn=n(),yt=p("p"),yt.textContent=tp,tn=n(),r(dt.$$.fragment),en=n(),ut=p("p"),ut.textContent=ep,an=n(),r(Mt.$$.fragment),nn=n(),ft=p("p"),ft.textContent=ap,ln=n(),r(wt.$$.fragment),pn=n(),vt=p("p"),vt.textContent=np,mn=n(),r(Tt.$$.fragment),rn=n(),bt=p("p"),bt.innerHTML=lp,on=n(),r($t.$$.fragment),cn=n(),Jt=p("p"),Jt.textContent=pp,hn=n(),r(xt.$$.fragment),gn=n(),Ct=p("p"),Ct.textContent=ip,yn=n(),r(Ut.$$.fragment),dn=n(),jt=p("p"),jt.textContent=mp,un=n(),r(_t.$$.fragment),Mn=n(),It=p("p"),It.innerHTML=rp,fn=n(),r(At.$$.fragment),wn=n(),kt=p("p"),kt.innerHTML=op,vn=n(),r(zt.$$.fragment),Tn=n(),Gt=p("p"),Gt.innerHTML=cp,bn=n(),r(Bt.$$.fragment),$n=n(),Rt=p("p"),Rt.textContent=hp,Jn=n(),Zt=p("ol"),Zt.innerHTML=gp,xn=n(),Qt=p("p"),Qt.textContent=yp,Cn=n(),St=p("p"),St.textContent=dp,Un=n(),Ht=p("p"),Ht.textContent=up,jn=n(),r(Et.$$.fragment),_n=n(),Nt=p("ol"),Nt.innerHTML=Mp,In=n(),Kt=p("p"),this.h()},l(s){const t=Ap("svelte-u9bgzb",document.head);M=i(t,"META",{name:!0,content:!0}),t.forEach(e),v=l(s),j=i(s,"P",{}),w(j).forEach(e),ee=l(s),o(_.$$.fragment,s),ae=l(s),o(J.$$.fragment,s),ne=l(s),I=i(s,"P",{"data-svelte-h":!0}),m(I)!=="svelte-yv9vu0"&&(I.textContent=Fn),le=l(s),A=i(s,"P",{"data-svelte-h":!0}),m(A)!=="svelte-1m5i5vf"&&(A.textContent=Dn),pe=l(s),k=i(s,"P",{"data-svelte-h":!0}),m(k)!=="svelte-1z0jlvp"&&(k.textContent=Wn),ie=l(s),z=i(s,"P",{"data-svelte-h":!0}),m(z)!=="svelte-1rot1dt"&&(z.textContent=Yn),me=l(s),G=i(s,"P",{"data-svelte-h":!0}),m(G)!=="svelte-grajek"&&(G.innerHTML=qn),re=l(s),B=i(s,"P",{"data-svelte-h":!0}),m(B)!=="svelte-2029g"&&(B.textContent=On),oe=l(s),o(R.$$.fragment,s),ce=l(s),Z=i(s,"P",{"data-svelte-h":!0}),m(Z)!=="svelte-19zfcdy"&&(Z.textContent=Kn),he=l(s),Q=i(s,"P",{"data-svelte-h":!0}),m(Q)!=="svelte-7ijv8n"&&(Q.textContent=sl),ge=l(s),o(S.$$.fragment,s),ye=l(s),H=i(s,"P",{"data-svelte-h":!0}),m(H)!=="svelte-l99jvf"&&(H.textContent=tl),de=l(s),E=i(s,"P",{"data-svelte-h":!0}),m(E)!=="svelte-13tjccs"&&(E.innerHTML=el),ue=l(s),o(N.$$.fragment,s),Me=l(s),L=i(s,"P",{"data-svelte-h":!0}),m(L)!=="svelte-6hey6l"&&(L.textContent=al),fe=l(s),X=i(s,"UL",{"data-svelte-h":!0}),m(X)!=="svelte-d2hqi4"&&(X.innerHTML=nl),we=l(s),P=i(s,"P",{"data-svelte-h":!0}),m(P)!=="svelte-1hkfalc"&&(P.textContent=ll),ve=l(s),o(V.$$.fragment,s),Te=l(s),F=i(s,"P",{"data-svelte-h":!0}),m(F)!=="svelte-py6z8p"&&(F.textContent=pl),be=l(s),o(D.$$.fragment,s),$e=l(s),W=i(s,"P",{"data-svelte-h":!0}),m(W)!=="svelte-c98l76"&&(W.textContent=il),Je=l(s),Y=i(s,"P",{"data-svelte-h":!0}),m(Y)!=="svelte-km5vrd"&&(Y.innerHTML=ml),xe=l(s),o(q.$$.fragment,s),Ce=l(s),O=i(s,"P",{});var qt=w(O);Gn=$(qt,`The key insight of GRPO is that we don’t need absolute measures of quality - we can compare outputs within the same group. This is done using standardization:
`),Ue=Xt(qt,!1),qt.forEach(e),je=l(s),o(K.$$.fragment,s),_e=l(s),ss=i(s,"P",{"data-svelte-h":!0}),m(ss)!=="svelte-24wdaf"&&(ss.textContent=rl),Ie=l(s),ts=i(s,"UL",{"data-svelte-h":!0}),m(ts)!=="svelte-sl5m0h"&&(ts.innerHTML=ol),Ae=l(s),o(es.$$.fragment,s),ke=l(s),as=i(s,"P",{"data-svelte-h":!0}),m(as)!=="svelte-posn41"&&(as.textContent=cl),ze=l(s),ns=i(s,"P",{"data-svelte-h":!0}),m(ns)!=="svelte-zcjrdj"&&(ns.textContent=hl),Ge=l(s),ls=i(s,"P",{"data-svelte-h":!0}),m(ls)!=="svelte-1vsxktr"&&(ls.textContent=gl),Be=l(s),ps=i(s,"P",{"data-svelte-h":!0}),m(ps)!=="svelte-19cns2n"&&(ps.textContent=yl),Re=l(s),o(is.$$.fragment,s),Ze=l(s),ms=i(s,"P",{"data-svelte-h":!0}),m(ms)!=="svelte-9fqajt"&&(ms.textContent=dl),Qe=l(s),rs=i(s,"P",{});var Xn=w(rs);Bn=$(Xn,`The target function for policy update is:
`),Se=Xt(Xn,!1),Xn.forEach(e),He=l(s),os=i(s,"P",{"data-svelte-h":!0}),m(os)!=="svelte-1b0nggz"&&(os.textContent=ul),Ee=l(s),o(cs.$$.fragment,s),Ne=l(s),hs=i(s,"P",{"data-svelte-h":!0}),m(hs)!=="svelte-17gvfcn"&&(hs.textContent=Ml),Le=l(s),o(gs.$$.fragment,s),Xe=l(s),ys=i(s,"P",{"data-svelte-h":!0}),m(ys)!=="svelte-m3dudm"&&(ys.textContent=fl),Pe=l(s),ds=i(s,"P",{"data-svelte-h":!0}),m(ds)!=="svelte-1089qz0"&&(ds.innerHTML=wl),Ve=l(s),us=i(s,"P",{"data-svelte-h":!0}),m(us)!=="svelte-s1ow2h"&&(us.textContent=vl),Fe=l(s),o(Ms.$$.fragment,s),De=l(s),fs=i(s,"UL",{"data-svelte-h":!0}),m(fs)!=="svelte-jkfg9l"&&(fs.innerHTML=Tl),We=l(s),ws=i(s,"P",{"data-svelte-h":!0}),m(ws)!=="svelte-gvqvif"&&(ws.textContent=bl),Ye=l(s),o(vs.$$.fragment,s),qe=l(s),Ts=i(s,"P",{"data-svelte-h":!0}),m(Ts)!=="svelte-1wq6f94"&&(Ts.textContent=$l),Oe=l(s),bs=i(s,"P",{"data-svelte-h":!0}),m(bs)!=="svelte-csgxyq"&&(bs.innerHTML=Jl),Ke=l(s),$s=i(s,"P",{"data-svelte-h":!0}),m($s)!=="svelte-sm8a7o"&&($s.textContent=xl),sa=l(s),o(Js.$$.fragment,s),ta=l(s),xs=i(s,"P",{"data-svelte-h":!0}),m(xs)!=="svelte-ici6cu"&&(xs.textContent=Cl),ea=l(s),Cs=i(s,"UL",{"data-svelte-h":!0}),m(Cs)!=="svelte-183y4uy"&&(Cs.innerHTML=Ul),aa=l(s),o(Us.$$.fragment,s),na=l(s),js=i(s,"UL",{"data-svelte-h":!0}),m(js)!=="svelte-11d1zl1"&&(js.innerHTML=jl),la=l(s),_s=i(s,"P",{"data-svelte-h":!0}),m(_s)!=="svelte-1542h54"&&(_s.textContent=_l),pa=l(s),o(Is.$$.fragment,s),ia=l(s),As=i(s,"P",{"data-svelte-h":!0}),m(As)!=="svelte-126d324"&&(As.textContent=Il),ma=l(s),ks=i(s,"P",{"data-svelte-h":!0}),m(ks)!=="svelte-zkgyxi"&&(ks.innerHTML=Al),ra=l(s),zs=i(s,"P",{"data-svelte-h":!0}),m(zs)!=="svelte-i6pndx"&&(zs.innerHTML=kl),oa=l(s),o(Gs.$$.fragment,s),ca=l(s),Bs=i(s,"UL",{"data-svelte-h":!0}),m(Bs)!=="svelte-182lgs4"&&(Bs.innerHTML=zl),ha=l(s),o(Rs.$$.fragment,s),ga=l(s),Zs=i(s,"P",{"data-svelte-h":!0}),m(Zs)!=="svelte-5tevnd"&&(Zs.textContent=Gl),ya=l(s),x=i(s,"P",{});var kn=w(x);Rn=$(kn,"Recall that KL distance is defined as follows:"),da=Xt(kn,!1),ua=$(kn,`
In RLHF, the two distributions of interest are often the distribution of the new model version, P(x), and a distribution of the reference policy, Q(x).`),kn.forEach(e),Ma=l(s),o(Qs.$$.fragment,s),fa=l(s),Ss=i(s,"P",{"data-svelte-h":!0}),m(Ss)!=="svelte-ugynt7"&&(Ss.textContent=Bl),wa=l(s),Hs=i(s,"UL",{"data-svelte-h":!0}),m(Hs)!=="svelte-959xmu"&&(Hs.innerHTML=Rl),va=l(s),Es=i(s,"P",{"data-svelte-h":!0}),m(Es)!=="svelte-172tgrr"&&(Es.textContent=Zl),Ta=l(s),o(Ns.$$.fragment,s),ba=l(s),Ls=i(s,"P",{"data-svelte-h":!0}),m(Ls)!=="svelte-1kecgai"&&(Ls.textContent=Ql),$a=l(s),o(Xs.$$.fragment,s),Ja=l(s),Pt=i(s,"P",{});var fp=w(Pt);xa=Xt(fp,!1),fp.forEach(e),Ca=l(s),o(Ps.$$.fragment,s),Ua=l(s),Vs=i(s,"P",{"data-svelte-h":!0}),m(Vs)!=="svelte-19oke8c"&&(Vs.textContent=Sl),ja=l(s),Fs=i(s,"P",{});var Pn=w(Fs);Zn=$(Pn,`Generate $(G = 8)$ responses, $4$ of which are correct answer ($14, \\text{reward=} 1$) and $4$ incorrect $\\text{(reward= 0)}$, Therefore:
`),_a=Xt(Pn,!1),Pn.forEach(e),Ia=l(s),o(Ds.$$.fragment,s),Aa=l(s),Ws=i(s,"P",{"data-svelte-h":!0}),m(Ws)!=="svelte-7jmzoi"&&(Ws.textContent=Hl),ka=l(s),T=i(s,"UL",{});var Ot=w(T);Vt=i(Ot,"LI",{});var Vn=w(Vt);Qn=$(Vn,"Group Average: "),za=Xt(Vn,!1),Vn.forEach(e),Sn=l(Ot),Ft=i(Ot,"LI",{"data-svelte-h":!0}),m(Ft)!=="svelte-11g5ftk"&&(Ft.textContent=El),Hn=l(Ot),Dt=i(Ot,"LI",{"data-svelte-h":!0}),m(Dt)!=="svelte-d19f8i"&&(Dt.innerHTML=Nl),Ot.forEach(e),Ga=l(s),o(Ys.$$.fragment,s),Ba=l(s),qs=i(s,"P",{"data-svelte-h":!0}),m(qs)!=="svelte-p2yfd2"&&(qs.textContent=Ll),Ra=l(s),C=i(s,"UL",{});var zn=w(C);U=i(zn,"LI",{});var se=w(U);En=$(se,"Assuming the probability of old policy ($\\pi"),Wt=i(se,"EM",{"data-svelte-h":!0}),m(Wt)!=="svelte-19ssaec"&&(Wt.textContent=Xl),Nn=$(se,"{old}}$) for a correct output $o_1$ is $0.5$ and the new policy increases it to $0.7$ then:"),Za=Xt(se,!1),se.forEach(e),Ln=l(zn),Yt=i(zn,"LI",{"data-svelte-h":!0}),m(Yt)!=="svelte-1fcug7i"&&(Yt.textContent=Pl),zn.forEach(e),Qa=l(s),Os=i(s,"P",{"data-svelte-h":!0}),m(Os)!=="svelte-axmf6u"&&(Os.textContent=Vl),Sa=l(s),o(Ks.$$.fragment,s),Ha=l(s),st=i(s,"P",{"data-svelte-h":!0}),m(st)!=="svelte-1onl4uk"&&(st.textContent=Fl),Ea=l(s),o(tt.$$.fragment,s),Na=l(s),et=i(s,"P",{"data-svelte-h":!0}),m(et)!=="svelte-qcmhu8"&&(et.textContent=Dl),La=l(s),o(at.$$.fragment,s),Xa=l(s),nt=i(s,"P",{"data-svelte-h":!0}),m(nt)!=="svelte-5ogvdk"&&(nt.textContent=Wl),Pa=l(s),o(lt.$$.fragment,s),Va=l(s),o(pt.$$.fragment,s),Fa=l(s),it=i(s,"P",{"data-svelte-h":!0}),m(it)!=="svelte-sdk010"&&(it.textContent=Yl),Da=l(s),mt=i(s,"P",{"data-svelte-h":!0}),m(mt)!=="svelte-1axuibu"&&(mt.innerHTML=ql),Wa=l(s),rt=i(s,"UL",{"data-svelte-h":!0}),m(rt)!=="svelte-1eslwf1"&&(rt.innerHTML=Ol),Ya=l(s),ot=i(s,"P",{"data-svelte-h":!0}),m(ot)!=="svelte-1ylhe0"&&(ot.textContent=Kl),qa=l(s),o(ct.$$.fragment,s),Oa=l(s),ht=i(s,"P",{"data-svelte-h":!0}),m(ht)!=="svelte-1dv10qi"&&(ht.textContent=sp),Ka=l(s),o(gt.$$.fragment,s),sn=l(s),yt=i(s,"P",{"data-svelte-h":!0}),m(yt)!=="svelte-1k2jw1h"&&(yt.textContent=tp),tn=l(s),o(dt.$$.fragment,s),en=l(s),ut=i(s,"P",{"data-svelte-h":!0}),m(ut)!=="svelte-v9ksyn"&&(ut.textContent=ep),an=l(s),o(Mt.$$.fragment,s),nn=l(s),ft=i(s,"P",{"data-svelte-h":!0}),m(ft)!=="svelte-1k2jw1h"&&(ft.textContent=ap),ln=l(s),o(wt.$$.fragment,s),pn=l(s),vt=i(s,"P",{"data-svelte-h":!0}),m(vt)!=="svelte-1z0xj5h"&&(vt.textContent=np),mn=l(s),o(Tt.$$.fragment,s),rn=l(s),bt=i(s,"P",{"data-svelte-h":!0}),m(bt)!=="svelte-1usqh25"&&(bt.innerHTML=lp),on=l(s),o($t.$$.fragment,s),cn=l(s),Jt=i(s,"P",{"data-svelte-h":!0}),m(Jt)!=="svelte-mxi4u2"&&(Jt.textContent=pp),hn=l(s),o(xt.$$.fragment,s),gn=l(s),Ct=i(s,"P",{"data-svelte-h":!0}),m(Ct)!=="svelte-16k78wr"&&(Ct.textContent=ip),yn=l(s),o(Ut.$$.fragment,s),dn=l(s),jt=i(s,"P",{"data-svelte-h":!0}),m(jt)!=="svelte-t7gd3h"&&(jt.textContent=mp),un=l(s),o(_t.$$.fragment,s),Mn=l(s),It=i(s,"P",{"data-svelte-h":!0}),m(It)!=="svelte-17qfvx2"&&(It.innerHTML=rp),fn=l(s),o(At.$$.fragment,s),wn=l(s),kt=i(s,"P",{"data-svelte-h":!0}),m(kt)!=="svelte-exudkk"&&(kt.innerHTML=op),vn=l(s),o(zt.$$.fragment,s),Tn=l(s),Gt=i(s,"P",{"data-svelte-h":!0}),m(Gt)!=="svelte-17fht8a"&&(Gt.innerHTML=cp),bn=l(s),o(Bt.$$.fragment,s),$n=l(s),Rt=i(s,"P",{"data-svelte-h":!0}),m(Rt)!=="svelte-efhpp6"&&(Rt.textContent=hp),Jn=l(s),Zt=i(s,"OL",{"data-svelte-h":!0}),m(Zt)!=="svelte-hly9hr"&&(Zt.innerHTML=gp),xn=l(s),Qt=i(s,"P",{"data-svelte-h":!0}),m(Qt)!=="svelte-33u601"&&(Qt.textContent=yp),Cn=l(s),St=i(s,"P",{"data-svelte-h":!0}),m(St)!=="svelte-crj0za"&&(St.textContent=dp),Un=l(s),Ht=i(s,"P",{"data-svelte-h":!0}),m(Ht)!=="svelte-1ywr9jc"&&(Ht.textContent=up),jn=l(s),o(Et.$$.fragment,s),_n=l(s),Nt=i(s,"OL",{"data-svelte-h":!0}),m(Nt)!=="svelte-18yys75"&&(Nt.innerHTML=Mp),In=l(s),Kt=i(s,"P",{}),w(Kt).forEach(e),this.h()},h(){wp(M,"name","hf:doc:metadata"),wp(M,"content",Bp),Ue.a=null,Se.a=null,da.a=ua,xa.a=null,_a.a=null,za.a=null,Za.a=null},m(s,t){u(document.head,M),a(s,v,t),a(s,j,t),a(s,ee,t),c(_,s,t),a(s,ae,t),c(J,s,t),a(s,ne,t),a(s,I,t),a(s,le,t),a(s,A,t),a(s,pe,t),a(s,k,t),a(s,ie,t),a(s,z,t),a(s,me,t),a(s,G,t),a(s,re,t),a(s,B,t),a(s,oe,t),c(R,s,t),a(s,ce,t),a(s,Z,t),a(s,he,t),a(s,Q,t),a(s,ge,t),c(S,s,t),a(s,ye,t),a(s,H,t),a(s,de,t),a(s,E,t),a(s,ue,t),c(N,s,t),a(s,Me,t),a(s,L,t),a(s,fe,t),a(s,X,t),a(s,we,t),a(s,P,t),a(s,ve,t),c(V,s,t),a(s,Te,t),a(s,F,t),a(s,be,t),c(D,s,t),a(s,$e,t),a(s,W,t),a(s,Je,t),a(s,Y,t),a(s,xe,t),c(q,s,t),a(s,Ce,t),a(s,O,t),u(O,Gn),Ue.m(vp,O),a(s,je,t),c(K,s,t),a(s,_e,t),a(s,ss,t),a(s,Ie,t),a(s,ts,t),a(s,Ae,t),c(es,s,t),a(s,ke,t),a(s,as,t),a(s,ze,t),a(s,ns,t),a(s,Ge,t),a(s,ls,t),a(s,Be,t),a(s,ps,t),a(s,Re,t),c(is,s,t),a(s,Ze,t),a(s,ms,t),a(s,Qe,t),a(s,rs,t),u(rs,Bn),Se.m(Tp,rs),a(s,He,t),a(s,os,t),a(s,Ee,t),c(cs,s,t),a(s,Ne,t),a(s,hs,t),a(s,Le,t),c(gs,s,t),a(s,Xe,t),a(s,ys,t),a(s,Pe,t),a(s,ds,t),a(s,Ve,t),a(s,us,t),a(s,Fe,t),c(Ms,s,t),a(s,De,t),a(s,fs,t),a(s,We,t),a(s,ws,t),a(s,Ye,t),c(vs,s,t),a(s,qe,t),a(s,Ts,t),a(s,Oe,t),a(s,bs,t),a(s,Ke,t),a(s,$s,t),a(s,sa,t),c(Js,s,t),a(s,ta,t),a(s,xs,t),a(s,ea,t),a(s,Cs,t),a(s,aa,t),c(Us,s,t),a(s,na,t),a(s,js,t),a(s,la,t),a(s,_s,t),a(s,pa,t),c(Is,s,t),a(s,ia,t),a(s,As,t),a(s,ma,t),a(s,ks,t),a(s,ra,t),a(s,zs,t),a(s,oa,t),c(Gs,s,t),a(s,ca,t),a(s,Bs,t),a(s,ha,t),c(Rs,s,t),a(s,ga,t),a(s,Zs,t),a(s,ya,t),a(s,x,t),u(x,Rn),da.m(bp,x),u(x,ua),a(s,Ma,t),c(Qs,s,t),a(s,fa,t),a(s,Ss,t),a(s,wa,t),a(s,Hs,t),a(s,va,t),a(s,Es,t),a(s,Ta,t),c(Ns,s,t),a(s,ba,t),a(s,Ls,t),a(s,$a,t),c(Xs,s,t),a(s,Ja,t),a(s,Pt,t),xa.m($p,Pt),a(s,Ca,t),c(Ps,s,t),a(s,Ua,t),a(s,Vs,t),a(s,ja,t),a(s,Fs,t),u(Fs,Zn),_a.m(Jp,Fs),a(s,Ia,t),c(Ds,s,t),a(s,Aa,t),a(s,Ws,t),a(s,ka,t),a(s,T,t),u(T,Vt),u(Vt,Qn),za.m(xp,Vt),u(T,Sn),u(T,Ft),u(T,Hn),u(T,Dt),a(s,Ga,t),c(Ys,s,t),a(s,Ba,t),a(s,qs,t),a(s,Ra,t),a(s,C,t),u(C,U),u(U,En),u(U,Wt),u(U,Nn),Za.m(Cp,U),u(C,Ln),u(C,Yt),a(s,Qa,t),a(s,Os,t),a(s,Sa,t),c(Ks,s,t),a(s,Ha,t),a(s,st,t),a(s,Ea,t),c(tt,s,t),a(s,Na,t),a(s,et,t),a(s,La,t),c(at,s,t),a(s,Xa,t),a(s,nt,t),a(s,Pa,t),c(lt,s,t),a(s,Va,t),c(pt,s,t),a(s,Fa,t),a(s,it,t),a(s,Da,t),a(s,mt,t),a(s,Wa,t),a(s,rt,t),a(s,Ya,t),a(s,ot,t),a(s,qa,t),c(ct,s,t),a(s,Oa,t),a(s,ht,t),a(s,Ka,t),c(gt,s,t),a(s,sn,t),a(s,yt,t),a(s,tn,t),c(dt,s,t),a(s,en,t),a(s,ut,t),a(s,an,t),c(Mt,s,t),a(s,nn,t),a(s,ft,t),a(s,ln,t),c(wt,s,t),a(s,pn,t),a(s,vt,t),a(s,mn,t),c(Tt,s,t),a(s,rn,t),a(s,bt,t),a(s,on,t),c($t,s,t),a(s,cn,t),a(s,Jt,t),a(s,hn,t),c(xt,s,t),a(s,gn,t),a(s,Ct,t),a(s,yn,t),c(Ut,s,t),a(s,dn,t),a(s,jt,t),a(s,un,t),c(_t,s,t),a(s,Mn,t),a(s,It,t),a(s,fn,t),c(At,s,t),a(s,wn,t),a(s,kt,t),a(s,vn,t),c(zt,s,t),a(s,Tn,t),a(s,Gt,t),a(s,bn,t),c(Bt,s,t),a(s,$n,t),a(s,Rt,t),a(s,Jn,t),a(s,Zt,t),a(s,xn,t),a(s,Qt,t),a(s,Cn,t),a(s,St,t),a(s,Un,t),a(s,Ht,t),a(s,jn,t),c(Et,s,t),a(s,_n,t),a(s,Nt,t),a(s,In,t),a(s,Kt,t),An=!0},p(s,[t]){const qt={};t&2&&(qt.$$scope={dirty:t,ctx:s}),J.$set(qt)},i(s){An||(h(_.$$.fragment,s),h(J.$$.fragment,s),h(R.$$.fragment,s),h(S.$$.fragment,s),h(N.$$.fragment,s),h(V.$$.fragment,s),h(D.$$.fragment,s),h(q.$$.fragment,s),h(K.$$.fragment,s),h(es.$$.fragment,s),h(is.$$.fragment,s),h(cs.$$.fragment,s),h(gs.$$.fragment,s),h(Ms.$$.fragment,s),h(vs.$$.fragment,s),h(Js.$$.fragment,s),h(Us.$$.fragment,s),h(Is.$$.fragment,s),h(Gs.$$.fragment,s),h(Rs.$$.fragment,s),h(Qs.$$.fragment,s),h(Ns.$$.fragment,s),h(Xs.$$.fragment,s),h(Ps.$$.fragment,s),h(Ds.$$.fragment,s),h(Ys.$$.fragment,s),h(Ks.$$.fragment,s),h(tt.$$.fragment,s),h(at.$$.fragment,s),h(lt.$$.fragment,s),h(pt.$$.fragment,s),h(ct.$$.fragment,s),h(gt.$$.fragment,s),h(dt.$$.fragment,s),h(Mt.$$.fragment,s),h(wt.$$.fragment,s),h(Tt.$$.fragment,s),h($t.$$.fragment,s),h(xt.$$.fragment,s),h(Ut.$$.fragment,s),h(_t.$$.fragment,s),h(At.$$.fragment,s),h(zt.$$.fragment,s),h(Bt.$$.fragment,s),h(Et.$$.fragment,s),An=!0)},o(s){g(_.$$.fragment,s),g(J.$$.fragment,s),g(R.$$.fragment,s),g(S.$$.fragment,s),g(N.$$.fragment,s),g(V.$$.fragment,s),g(D.$$.fragment,s),g(q.$$.fragment,s),g(K.$$.fragment,s),g(es.$$.fragment,s),g(is.$$.fragment,s),g(cs.$$.fragment,s),g(gs.$$.fragment,s),g(Ms.$$.fragment,s),g(vs.$$.fragment,s),g(Js.$$.fragment,s),g(Us.$$.fragment,s),g(Is.$$.fragment,s),g(Gs.$$.fragment,s),g(Rs.$$.fragment,s),g(Qs.$$.fragment,s),g(Ns.$$.fragment,s),g(Xs.$$.fragment,s),g(Ps.$$.fragment,s),g(Ds.$$.fragment,s),g(Ys.$$.fragment,s),g(Ks.$$.fragment,s),g(tt.$$.fragment,s),g(at.$$.fragment,s),g(lt.$$.fragment,s),g(pt.$$.fragment,s),g(ct.$$.fragment,s),g(gt.$$.fragment,s),g(dt.$$.fragment,s),g(Mt.$$.fragment,s),g(wt.$$.fragment,s),g(Tt.$$.fragment,s),g($t.$$.fragment,s),g(xt.$$.fragment,s),g(Ut.$$.fragment,s),g(_t.$$.fragment,s),g(At.$$.fragment,s),g(zt.$$.fragment,s),g(Bt.$$.fragment,s),g(Et.$$.fragment,s),An=!1},d(s){s&&(e(v),e(j),e(ee),e(ae),e(ne),e(I),e(le),e(A),e(pe),e(k),e(ie),e(z),e(me),e(G),e(re),e(B),e(oe),e(ce),e(Z),e(he),e(Q),e(ge),e(ye),e(H),e(de),e(E),e(ue),e(Me),e(L),e(fe),e(X),e(we),e(P),e(ve),e(Te),e(F),e(be),e($e),e(W),e(Je),e(Y),e(xe),e(Ce),e(O),e(je),e(_e),e(ss),e(Ie),e(ts),e(Ae),e(ke),e(as),e(ze),e(ns),e(Ge),e(ls),e(Be),e(ps),e(Re),e(Ze),e(ms),e(Qe),e(rs),e(He),e(os),e(Ee),e(Ne),e(hs),e(Le),e(Xe),e(ys),e(Pe),e(ds),e(Ve),e(us),e(Fe),e(De),e(fs),e(We),e(ws),e(Ye),e(qe),e(Ts),e(Oe),e(bs),e(Ke),e($s),e(sa),e(ta),e(xs),e(ea),e(Cs),e(aa),e(na),e(js),e(la),e(_s),e(pa),e(ia),e(As),e(ma),e(ks),e(ra),e(zs),e(oa),e(ca),e(Bs),e(ha),e(ga),e(Zs),e(ya),e(x),e(Ma),e(fa),e(Ss),e(wa),e(Hs),e(va),e(Es),e(Ta),e(ba),e(Ls),e($a),e(Ja),e(Pt),e(Ca),e(Ua),e(Vs),e(ja),e(Fs),e(Ia),e(Aa),e(Ws),e(ka),e(T),e(Ga),e(Ba),e(qs),e(Ra),e(C),e(Qa),e(Os),e(Sa),e(Ha),e(st),e(Ea),e(Na),e(et),e(La),e(Xa),e(nt),e(Pa),e(Va),e(Fa),e(it),e(Da),e(mt),e(Wa),e(rt),e(Ya),e(ot),e(qa),e(Oa),e(ht),e(Ka),e(sn),e(yt),e(tn),e(en),e(ut),e(an),e(nn),e(ft),e(ln),e(pn),e(vt),e(mn),e(rn),e(bt),e(on),e(cn),e(Jt),e(hn),e(gn),e(Ct),e(yn),e(dn),e(jt),e(un),e(Mn),e(It),e(fn),e(wn),e(kt),e(vn),e(Tn),e(Gt),e(bn),e($n),e(Rt),e(Jn),e(Zt),e(xn),e(Qt),e(Cn),e(St),e(Un),e(Ht),e(jn),e(_n),e(Nt),e(In),e(Kt)),e(M),y(_,s),y(J,s),y(R,s),y(S,s),y(N,s),y(V,s),y(D,s),y(q,s),y(K,s),y(es,s),y(is,s),y(cs,s),y(gs,s),y(Ms,s),y(vs,s),y(Js,s),y(Us,s),y(Is,s),y(Gs,s),y(Rs,s),y(Qs,s),y(Ns,s),y(Xs,s),y(Ps,s),y(Ds,s),y(Ys,s),y(Ks,s),y(tt,s),y(at,s),y(lt,s),y(pt,s),y(ct,s),y(gt,s),y(dt,s),y(Mt,s),y(wt,s),y(Tt,s),y($t,s),y(xt,s),y(Ut,s),y(_t,s),y(At,s),y(zt,s),y(Bt,s),y(Et,s)}}}const Bp='{"title":"Advanced Understanding of Group Relative Policy Optimization (GRPO) in DeepSeekMath","local":"advanced-understanding-of-group-relative-policy-optimization-grpo-in-deepseekmath","sections":[{"title":"The GRPO Algorithm","local":"the-grpo-algorithm","sections":[{"title":"Step 1: Group Sampling","local":"step-1-group-sampling","sections":[{"title":"Example:","local":"example","sections":[],"depth":4}],"depth":3},{"title":"Step 2: Advantage Calculation","local":"step-2-advantage-calculation","sections":[{"title":"Reward Distribution:","local":"reward-distribution","sections":[],"depth":4},{"title":"Advantage Value Formula:","local":"advantage-value-formula","sections":[],"depth":4},{"title":"Example:","local":"example","sections":[],"depth":4},{"title":"Interpretation:","local":"interpretation","sections":[],"depth":4}],"depth":3},{"title":"Step 3: Policy Update","local":"step-3-policy-update","sections":[],"depth":3}],"depth":2},{"title":"Key Components of the Target Function","local":"key-components-of-the-target-function","sections":[{"title":"1. Probability Ratio","local":"1-probability-ratio","sections":[{"title":"Interpretation:","local":"interpretation","sections":[],"depth":4}],"depth":3},{"title":"2. Clip Function","local":"2-clip-function","sections":[{"title":"Example $\\space \\text{suppose}(\\epsilon = 0.2)$","local":"example-space-textsupposeepsilon--02","sections":[],"depth":4},{"title":"Interpretation:","local":"interpretation","sections":[],"depth":4}],"depth":3},{"title":"3. KL Divergence","local":"3-kl-divergence","sections":[{"title":"Interpretation","local":"interpretation","sections":[],"depth":4},{"title":"Math Definition","local":"math-definition","sections":[],"depth":4},{"title":"The Role of $\\beta$ Parameter","local":"the-role-of-beta-parameter","sections":[],"depth":4}],"depth":3}],"depth":2},{"title":"Worked Example with GRPO","local":"worked-example-with-grpo","sections":[{"title":"Example Problem","local":"example-problem","sections":[],"depth":3},{"title":"Step 1: Group Sampling","local":"step-1-group-sampling","sections":[],"depth":3},{"title":"Step 2: Advantage Calculation","local":"step-2-advantage-calculation","sections":[],"depth":3},{"title":"Step 3: Policy Update","local":"step-3-policy-update","sections":[],"depth":3}],"depth":2},{"title":"Implementation Example","local":"implementation-example","sections":[{"title":"1. Loading the Model and Generating Responses","local":"1-loading-the-model-and-generating-responses","sections":[],"depth":3},{"title":"2. Calculating Rewards","local":"2-calculating-rewards","sections":[],"depth":3},{"title":"3. Updating the Policy","local":"3-updating-the-policy","sections":[],"depth":3}],"depth":2},{"title":"Summary and Next Steps","local":"summary-and-next-steps","sections":[],"depth":2},{"title":"References","local":"references","sections":[],"depth":2}],"depth":1}';function Rp(te){return jp(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Np extends _p{constructor(M){super(),Ip(this,M,Rp,Gp,Up,{})}}export{Np as component};
